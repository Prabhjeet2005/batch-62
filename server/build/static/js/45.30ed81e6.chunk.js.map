{"version":3,"file":"static/js/45.30ed81e6.chunk.js","mappings":"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","sources":["Products/EditableProductCard/index.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Badge, Button, Card, CardBody, CardFooter, CardImg, CardTitle, Col, Container, FormCheck, FormControl, FormGroup, FormLabel, InputGroup, Row } from 'react-bootstrap'\r\n// import '../ProductCard/style.css'\r\nimport { Rating } from 'react-simple-star-rating'\r\nimport { Field, Form, useFormik } from 'formik'\r\nimport { PencilSquare } from 'react-bootstrap-icons'\r\n\r\nconst FIELD_NAMES = {\r\n    ID: '    id',\r\n    TITLE: 'title',\r\n    PRICE: 'price',\r\n    DESCRIPTION: 'description',\r\n    IMAGE: 'image',\r\n    DISCOUNT_PERCENT: 'discountPercent',\r\n    HAS_DISCOUNT: 'hasDiscount',\r\n}\r\n\r\nconst EditIcon = ({ onClick }) => {\r\n    return <PencilSquare onClick={onClick} className='cursor-pointer ms-3' size={25} />\r\n}\r\n\r\nconst EditableProductCard = ({ values, initialValues, resetForm }) => {\r\n    const [editField, setEditField] = useState(null);\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        price,\r\n        description,\r\n        image,\r\n        rating,\r\n        hasDiscount,\r\n        discountPercent\r\n    } = values || {};\r\n\r\n    const discountedPrice = (price * (1 - discountPercent / 100)).toFixed(2);\r\n\r\n    const onSubmit = () => {\r\n        console.log(\"ðŸš€ ~ onSubmit ~ values:\", values);\r\n    }\r\n\r\n\r\n    return (\r\n        <Form>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={{ span: 5, offset: 3 }}>\r\n                        <Card className='product mb-3'>\r\n                            <CardImg loading='lazy' className='image' src={image} variant='top'></CardImg>\r\n                            <CardBody>\r\n                                <FormGroup className='mb-3'>\r\n                                    <FormLabel>Product Title</FormLabel>\r\n                                    {editField === FIELD_NAMES.TITLE ?\r\n                                        <Field name={FIELD_NAMES.TITLE} as={FormControl} /> :\r\n                                        <>\r\n                                            <section className='d-flex align-items-center'>\r\n                                                <CardTitle>{title}</CardTitle>\r\n                                                <EditIcon onClick={() => setEditField(FIELD_NAMES.TITLE)} />\r\n                                            </section>\r\n                                        </>\r\n                                    }\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className='mb-3'>\r\n                                    <FormLabel>Product Price</FormLabel>\r\n                                    {editField === FIELD_NAMES.PRICE ?\r\n                                        <>\r\n                                            <InputGroup className=\"mb-3\">\r\n                                                <InputGroup.Text>$</InputGroup.Text>\r\n                                                <Field name={FIELD_NAMES.PRICE} as={FormControl} />\r\n                                            </InputGroup>\r\n\r\n                                            <FormGroup className='mt-3 d-flex align-items-center'>\r\n                                                <Field type=\"checkbox\" name={FIELD_NAMES.HAS_DISCOUNT} as={FormCheck} label=\"Apply Discount\" />\r\n                                            </FormGroup>\r\n\r\n                                            {hasDiscount ? <InputGroup className=\"mb-3\">\r\n                                                <Field name={FIELD_NAMES.DISCOUNT_PERCENT} as={FormControl} />\r\n                                                <InputGroup.Text>%</InputGroup.Text>\r\n                                            </InputGroup> : null}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <section className='d-flex align-items-center'>\r\n                                                {hasDiscount && discountPercent ? <>\r\n                                                    <span className='text-muted me-2' style={{ textDecoration: \"line-through\" }}>${price}</span>\r\n                                                    <span className='fw-bold text-danger me-2'> - {discountPercent}%</span>\r\n                                                    <span className='fw-bold text-success'>${discountedPrice}</span>\r\n                                                </> : <section>${price}</section>\r\n                                                }\r\n\r\n                                                <EditIcon onClick={() => setEditField(FIELD_NAMES.PRICE)} />\r\n                                            </section>\r\n                                        </>\r\n                                    }\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className='mb-3'>\r\n                                    \r\n                                    <FormLabel>Product Description</FormLabel>\r\n                                    <EditIcon onClick={() => setEditField(FIELD_NAMES.DESCRIPTION)}/>\r\n                                    {editField === FIELD_NAMES.DESCRIPTION ?\r\n                                        <Field name={FIELD_NAMES.DESCRIPTION} >\r\n                                            {({ field }) => <FormControl {...field} as=\"textarea\" style={{ height: '100px' }} />}\r\n                                        </Field> :\r\n                                        <>\r\n                                            <section className='d-flex align-items-center'>\r\n                                                <section>{description}</section>\r\n                                            </section>\r\n                                        </>\r\n                                    }\r\n                                </FormGroup>\r\n\r\n                                <section className='d-flex align-items-center'>\r\n                                    <Rating\r\n                                        readonly\r\n                                        allowFraction\r\n                                        initialValue={rating.rate}\r\n                                        size={20}\r\n                                    />\r\n                                    <Badge pill bg=\"info\" className='align-self-end ms-1'>\r\n                                        {rating.count}\r\n                                    </Badge>\r\n                                </section>\r\n\r\n                            </CardBody>\r\n                            <CardFooter>\r\n                                <Button variant='outline-danger' onClick={() => { resetForm(); setEditField(null) }}>Reset</Button>\r\n                                <Button variant='outline-primary' className='ms-5 ' onClick={() => setEditField(null)}>Preview </Button>\r\n                                <Button variant='outline-success' className='ms-5' onClick={onSubmit}>Submit</Button>\r\n\r\n                            </CardFooter>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EditableProductCard"],"names":["FIELD_NAMES","EditIcon","_ref","onClick","_jsx","PencilSquare","className","size","_ref2","values","initialValues","resetForm","editField","setEditField","useState","id","title","price","description","image","rating","hasDiscount","discountPercent","discountedPrice","toFixed","Form","children","Container","fluid","Row","Col","md","span","offset","_jsxs","Card","CardImg","loading","src","variant","CardBody","FormGroup","FormLabel","Field","name","as","FormControl","_Fragment","CardTitle","InputGroup","Text","type","FormCheck","label","style","textDecoration","_ref3","field","_objectSpread","height","Rating","readonly","allowFraction","initialValue","rate","Badge","pill","bg","count","CardFooter","Button","onSubmit","console","log"],"sourceRoot":""}